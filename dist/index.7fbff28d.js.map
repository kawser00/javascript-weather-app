{"mappings":"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","sources":["main.js"],"sourcesContent":["//User Interface/DOM related properties and methods\r\nconst UI = {\r\n  loadSelector() {\r\n    const cityElm = document.querySelector(\"#city\");\r\n    const cityInfoElm = document.querySelector(\"#w-city\");\r\n    const iconElm = document.querySelector(\"#w-icon\");\r\n    const temperatureElm = document.querySelector(\"#w-temp\");\r\n    const pressureElm = document.querySelector(\"#w-pressure\");\r\n    const humidityElm = document.querySelector(\"#w-humidity\");\r\n    const feelElm = document.querySelector(\"#w-feel\");\r\n    const formElm = document.querySelector(\"#form\");\r\n    const countryElm = document.querySelector(\"#country\");\r\n    const messageElm = document.querySelector(\"#messageWrapper\");\r\n    return {\r\n      cityElm,\r\n      countryElm,\r\n      cityInfoElm,\r\n      iconElm,\r\n      temperatureElm,\r\n      pressureElm,\r\n      humidityElm,\r\n      feelElm,\r\n      formElm,\r\n      messageElm,\r\n    };\r\n  },\r\n  hideMessage() {\r\n    const { messageElm } = this.loadSelector();\r\n    setTimeout(() => {\r\n      messageElm.innerHTML = \"\";\r\n    }, 2000);\r\n  },\r\n  showMessage(msg) {\r\n    const { messageElm } = this.loadSelector();\r\n    const elm = `<div class='alert alert-danger'>${msg}</div>`;\r\n    messageElm.innerHTML = elm;\r\n    //hiding message\r\n    this.hideMessage();\r\n  },\r\n  validateInput(city, country) {\r\n    if (city === \"\" || country === \"\") {\r\n      this.showMessage(\"please provide necessary information\");\r\n      return false;\r\n    }\r\n    return true;\r\n  },\r\n  getInput() {\r\n    const { cityElm, countryElm } = this.loadSelector();\r\n    const city = cityElm.value;\r\n    const country = countryElm.value;\r\n\r\n    //validate input\r\n    const isValidated = this.validateInput(city, country);\r\n    // if(!isValidated) return;\r\n    return { city, country, isValidated };\r\n  },\r\n  clearInput() {\r\n    const { cityElm, countryElm } = this.loadSelector();\r\n    cityElm.value = \"\";\r\n    countryElm.value = \"\";\r\n  },\r\n  getIcon(iconCode) {\r\n    return \"https://openweathermap.org/img/w/\" + iconCode + \".png\";\r\n  },\r\n  async getAndPopulateUI() {\r\n    //load data from localStorage\r\n    const { city, country } = storage.getData();\r\n    //setting to weatherData and calling API\r\n    weatherData.city = city;\r\n    weatherData.country = country;\r\n    //calling API\r\n    const data = await weatherData.getData();\r\n    //populate UI\r\n    console.log(this);\r\n    if (data) {\r\n      this.populateUI(data);\r\n    }\r\n  },\r\n  populateUI(data) {\r\n    const {\r\n      cityInfoElm,\r\n      iconElm,\r\n      temperatureElm,\r\n      pressureElm,\r\n      humidityElm,\r\n      feelElm,\r\n    } = this.loadSelector();\r\n    // console.log(data);\r\n\r\n    const { main, weather, name: cityName } = data;\r\n\r\n    const url = this.getIcon(weather[0].icon);\r\n\r\n    //setting element\r\n    cityInfoElm.textContent = cityName;\r\n    feelElm.textContent = weather[0].main;\r\n    temperatureElm.textContent = `Temperature: ${main.temp}Â°C`;\r\n    pressureElm.textContent = `Pressure: ${main.pressure} Kpa`;\r\n    humidityElm.textContent = `Humidity: ${main.humidity}`;\r\n    iconElm.setAttribute(\"src\", url);\r\n  },\r\n  init() {\r\n    const { formElm } = this.loadSelector();\r\n    formElm.addEventListener(\"submit\", async (e) => {\r\n      e.preventDefault();\r\n      //take input\r\n      const { city, country, isValidated } = this.getInput();\r\n      //clear input\r\n      this.clearInput();\r\n      if (isValidated) {\r\n        //saving data to local storage\r\n        storage.city = city;\r\n        storage.country = country;\r\n        //saving to local storage\r\n        storage.saveData();\r\n        //setting city and country\r\n        weatherData.city = city;\r\n        weatherData.country = country;\r\n        //getting data from API\r\n        const data = await weatherData.getData();\r\n        //populate UI\r\n        if (data) {\r\n          this.populateUI(data);\r\n        }\r\n      }\r\n    });\r\n    window.addEventListener(\"DOMContentLoaded\", this.getAndPopulateUI.bind(UI)); //In this function by default this means window object,so we are binding (UI as this) because we are not calling getAndPopulateUI function here.  \r\n\r\n    //if we use arrow function\r\n    // window.addEventListener(\"DOMContentLoaded\", () => {\r\n    //   this.getAndPopulateUI()\r\n    // });\r\n  },\r\n};\r\nUI.init();\r\n\r\n//temp data store and dealing\r\nconst weatherData = {\r\n  city: \"\",\r\n  country: \"\",\r\n  BASE_URL: \"https://api.openweathermap.org/data/2.5/weather\",\r\n  API_ID: \"6eb21f16aa6a43deba40dd917edec2c7\",\r\n  async getData() {\r\n    //requesting data from the server\r\n    try {\r\n      const res = await fetch(\r\n        `${this.BASE_URL}?q=${this.city},${this.country}&units=metric&appid=${this.API_ID}`\r\n      );\r\n\r\n      const data = await res.json();\r\n\r\n      if (data.cod >= 400) {\r\n        //error\r\n        UI.showMessage(data.message);\r\n        return false;\r\n      } else {\r\n        return data;\r\n      }\r\n    } catch (err) {\r\n      UI.showMessage(\"Problem in fetching weather\");\r\n    }\r\n  },\r\n};\r\n\r\n//local storage data\r\nconst storage = {\r\n  city: '',\r\n  country: '',\r\n  saveData() {\r\n    localStorage.setItem(\"BD-WEATHER-CITY\", this.city);\r\n    localStorage.setItem(\"BD-WEATHER-COUNTRY\", this.country);\r\n  },\r\n  getData() {\r\n    const city = localStorage.getItem(\"BD-WEATHER-CITY\") || \"Pabna\";\r\n    const country = localStorage.getItem(\"BD-WEATHER-COUNTRY\") || \"BD\";\r\n\r\n    return { city, country };\r\n  },\r\n};\r\n"],"names":[],"version":3,"file":"index.7fbff28d.js.map","sourceRoot":"/__parcel_source_root/"}